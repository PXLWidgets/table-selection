{"version":3,"sources":["webpack://TableSelection/webpack/universalModuleDefinition","webpack://TableSelection/webpack/bootstrap","webpack://TableSelection/./src/index.ts","webpack://TableSelection/./src/js/table-selection.ts"],"names":[],"mappings":"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","file":"table-selection.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TableSelection\"] = factory();\n\telse\n\t\troot[\"TableSelection\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ITableSelection from '../table-selection';\nimport IStatic = ITableSelection.IStatic;\n\nimport { TableSelection } from './js/table-selection';\n\n// IStatic should be implemented by default export as well:\nconst defaultNamespace: IStatic = { initialize };\n\nexport default defaultNamespace;\n\nexport function initialize(selector?: string, selectedClass?: string) {\n    return new TableSelection(selector, selectedClass);\n}\n","/*!\n * TableSelection library v0.9.1 (https://github.com/PXLWidgets/table-selection)\n * Copyright (c) 2018 Wouter Smit\n * Licensed under MIT (https://github.com/PXLWidgets/table-selection/blob/master/LICENSE)\n*/\n\ninterface ITableRowRange {\n    start: HTMLTableRowElement;\n    end: HTMLTableRowElement;\n}\n\ninterface ITableCellRange {\n    start: HTMLTableCellElement;\n    end: HTMLTableCellElement;\n}\n\ninterface ISelectionSnapshot {\n    trs: ITableRowRange;\n    tds: ITableCellRange;\n    cells?: HTMLTableCellElement[];\n}\n\nexport class TableSelection {\n\n    protected selector: string;\n    protected selectedClass: string;\n\n    protected selection: ISelectionSnapshot | null;\n    protected nativeSelection: Selection | null;\n\n    constructor(selector = '.table-selection', selectedClass = 'selected') {\n        this.selector = selector;\n        this.selectedClass = selectedClass;\n\n        this.selection = null;\n        this.nativeSelection = null;\n\n        this.setEventHandlers();\n    }\n\n    public setEventHandlers() {\n        document.addEventListener('selectionchange', this.selectionChangeHandler.bind(this));\n        document.addEventListener('copy', this.copyHandler.bind(this));\n    }\n\n    public selectionChangeHandler() {\n        this.deselect();\n        this.nativeSelection = window.getSelection ? getSelection() : null;\n\n        if (! this.nativeSelection) {\n            return;\n        }\n\n        this.getSelection();\n        this.showSelection();\n    }\n\n    public getSelection() {\n        const tds = this.getSelectionTds();\n\n        if ( ! tds) {\n            return null;\n        }\n\n        const firstElement: HTMLElement = tds.start as HTMLElement;\n\n        if ( ! firstElement.closest(this.selector)) {\n            return null;\n        }\n\n        const trs = this.getSelectionTrs(tds);\n\n        if ( !trs ) {\n            return null;\n        }\n\n        this.selection = {\n            tds,\n            trs,\n        };\n\n        this.selection.cells = this.getCellsInSelectionRange(this.selection);\n\n        return this.selection;\n    }\n\n    public getCellsInSelectionRange(selection: ISelectionSnapshot) {\n\n        const tbody = (selection.trs.start.parentElement as HTMLTableSectionElement);\n        const hasThead = tbody.previousElementSibling && tbody.previousElementSibling.matches('thead');\n\n        const trStartIndex = selection.trs.start.rowIndex - (hasThead ? 1 : 0);\n        const trEndIndex = selection.trs.end.rowIndex - (hasThead ? 1 : 0);\n\n        const tdStartIndex = selection.tds.start.cellIndex;\n        const tdEndIndex = selection.tds.end.cellIndex;\n\n        const trs: HTMLTableRowElement[] = Array\n            .from(tbody.rows)\n            .slice(trStartIndex, trEndIndex + 1)\n        ;\n\n        let cellsInRange: HTMLTableCellElement[] = [];\n\n        trs.forEach((tr) => {\n            const tds = Array\n                .from(tr.cells)\n                .slice(tdStartIndex, tdEndIndex + 1);\n\n            cellsInRange = cellsInRange.concat(tds);\n        });\n\n        return cellsInRange;\n    }\n\n    public getSelectionTrs(tds: ITableCellRange): ITableRowRange | null {\n        if (! tds.start || ! tds.end) {\n            return null;\n        }\n\n        let start = tds.start.closest('tr') as HTMLTableRowElement;\n        let end = tds.end.closest('tr') as HTMLTableRowElement;\n\n        if (start.rowIndex > end.rowIndex) {\n            [end, start] = [start, end];\n        }\n\n        return {start, end};\n    }\n\n    public getSelectionTds(): ITableCellRange | null {\n        if ( ! this.nativeSelection) {\n            return null;\n        }\n\n        let startNode = this.nativeSelection.anchorNode as Node | HTMLElement | null;\n        let endNode   = this.nativeSelection.focusNode as Node | HTMLElement | null;\n\n        if (! startNode || ! endNode) {\n            return null;\n        }\n\n        if (startNode.nodeType !== 1) {\n            startNode = startNode.parentElement as HTMLElement;\n        }\n\n        if (endNode.nodeType !== 1) {\n            endNode = endNode.parentElement as HTMLElement;\n        }\n\n        startNode = (startNode as HTMLElement).closest('td') as HTMLTableCellElement | null;\n        endNode = (endNode as HTMLElement).closest('td') as HTMLTableCellElement | null;\n\n        if (! startNode || ! endNode) {\n            return null;\n        }\n\n        let start: HTMLTableCellElement = startNode as HTMLTableCellElement;\n        let end: HTMLTableCellElement = endNode as HTMLTableCellElement;\n\n        if (start.cellIndex > end.cellIndex) {\n            [end, start] = [start, end];\n        }\n\n        return {start, end};\n    }\n\n    public showSelection() {\n        if (! this.selection || ! this.selection.cells) {\n            return;\n        }\n\n        this.selection.cells.forEach((cell) => {\n            cell.classList.add(this.selectedClass);\n        });\n    }\n\n    public hideSelection() {\n        if (! this.selection || ! this.selection.cells) {\n            return;\n        }\n\n        this.selection.cells.forEach((cell) => {\n            cell.classList.remove(this.selectedClass);\n        });\n    }\n\n    public deselect() {\n        if (! this.selection) {\n            return;\n        }\n\n        this.hideSelection();\n        this.selection = null;\n        this.nativeSelection = null;\n    }\n\n    public getSelectionText(): string | null {\n        if (! this.selection || ! this.selection.cells) {\n            return null;\n        }\n\n        const rowData = {};\n        const data = [];\n\n        this.selection.cells.forEach((cell) => {\n            if (! cell.parentElement) {\n                return;\n            }\n            const rowIndex = (cell.parentElement as HTMLTableRowElement).rowIndex;\n            rowData[rowIndex] = rowData[rowIndex] || [];\n            rowData[rowIndex].push(cell.innerText);\n        });\n\n        for (const i in rowData) {\n            if (! rowData.hasOwnProperty(i)) {\n                continue;\n            }\n            data.push(rowData[i].join('\\t'));\n        }\n\n        return data.join('\\n');\n    }\n\n    public copyHandler(e: ClipboardEvent) {\n        if ( ! this.selection) {\n            return;\n        }\n\n        const selectionText = this.getSelectionText();\n\n        if ( ! selectionText) {\n            return;\n        }\n\n        e.clipboardData.setData('text/plain', selectionText);\n        e.preventDefault();\n    }\n\n}\n"],"sourceRoot":""}